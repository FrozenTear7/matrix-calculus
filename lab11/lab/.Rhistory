setwd("C:/Projects/Math/matrix-calculus/lab11/lab")
# Zadanie 3, lab5, Paweł Mendroch
library(ISLR)
library(GAM)
Wage = na.omit(Wage)
attach(Wage)
fit.gam.ls <- lm(wage ~ ns(year, df = 4) + ns(age, df = 5) + education,
data = Wage)
fit.gam.ls
summary(fit.gam.ls)
install library(GAM)
install.packages("GAM")
yes
y
install.packages("gam")
# Zadanie 3, lab5, Paweł Mendroch
library(ISLR)
library(GAM)
Wage = na.omit(Wage)
attach(Wage)
fit.gam.ls <- lm(wage ~ ns(year, df = 4) + ns(age, df = 5) + education,
data = Wage)
fit.gam.ls
summary(fit.gam.ls)
# Zadanie 3, lab5, Paweł Mendroch
library(ISLR)
library(gam)
Wage = na.omit(Wage)
attach(Wage)
fit.gam.ls <- lm(wage ~ ns(year, df = 4) + ns(age, df = 5) + education,
data = Wage)
fit.gam.ls
summary(fit.gam.ls)
# Zadanie 3, lab5, Paweł Mendroch
library(ISLR)
library(gam)
Wage = na.omit(Wage)
attach(Wage)
fit.logistic.gam <- gam(I(wage > 250) ~ year + s(age, df = 5) + education, family = binomial, data = Wage)
summary(fit.logistic.gam)
par(mfrow = c(1, 3))
plot(fit.logistic.gam, col = "blue", se = TRUE)
fit.logistic.gam <- gam(I(wage > 250) ~ year + s(age, df = 5) + education, family = binomial, data = Wage)
summary(fit.logistic.gam)
par(mfrow = c(1, 3))
plot(fit.logistic.gam, col = "blue", se = TRUE)
# Zadanie 3, lab5, Paweł Mendroch
library(ISLR)
library(gam)
Wage = na.omit(Wage)
attach(Wage)
fit.logistic.gam <- gam(I(wage > 250) ~ year + s(age, df = 5) + education, family = binomial, data = Wage)
summary(fit.logistic.gam)
pred.gam = predict(fit.logistic.gam, se.fit = TRUE)
errors = cbind(education, pred.gam$se.fit)
errors
?cbind
top_n(errors, 10)
by(errors, head, n=10)
print(errors)
?top_n
??top_n
?top_n
install.packages("data.table")
?top_n
head(errors)
head(errors, 10)
head(errors, 20)
head(errors, 5)
library(ISLR)
head(errors, 10)
unique(errors[,1])
aggregate(. ~ education, d[2], mean)
aggregate(. ~ education, errors[2], mean)
aggregate(. ~ education, errors[2], mean)
errors = cbind(education, pred.gam$se.fit)
aggregate(. ~ education, errors[2], mean)
aggregate(errors ~ education, errors[2], mean)
aggregate(errors, errors[2], mean)
errors = cbind(education, pred.gam$se.fit)
aggregate(errors[, 2], list(errors$education), mean)
aggregate(errors[, 2], list(errors$education), mean)
aggregate(errors[, 2], list(education), mean)
mean(errors[errors[,1] == 1, 2])
mean(errors[errors[,1] == 2, 2])
mean(errors[errors[,1] == 3, 2])
mean(errors[errors[,1] == 4, 2])
mean(errors[errors[,1] == 5, 2])
ad.indices = Wage[["education"]] == "1. < HS Grad"
Wage.refined = Wage[!c(bad.indices),]
attach(Wage.refined)
bad.indices = Wage[["education"]] == "1. < HS Grad"
Wage.refined = Wage[!c(bad.indices),]
attach(Wage.refined)
bad.indices
Wage.refined
fit.logistic.gam.refined <- gam(I(wage > 250) ~ year + s(age, 5) + education, family = binomial, data = Wage.refined)
summary(fit.logistic.gam.refined)
summary(fit.logistic.gam)
summary(fit.logistic.gam)
summary(fit.logistic.gam.refined)
fit.logistic.gamNew <- gam(I(wage > 250) ~ year + s(age, 5) + education, family = binomial, data = Wage.refined)
summary(fit.logistic.gamNew)
# Zadanie 3, lab5, Paweł Mendroch
library(ISLR)
library(gam)
library(data.table)
Wage = na.omit(Wage)
attach(Wage)
# Przykład z konspektu GAM w GLM
fit.logistic.gam <- gam(I(wage > 250) ~ year + s(age, df = 5) + education, family = binomial, data = Wage)
summary(fit.logistic.gam)
pred.gam = predict(fit.logistic.gam, se.fit = TRUE)
errors = cbind(education, pred.gam$se.fit)
aggregate(errors[,2], list(education), mean)
# Widzimy ogromną różnicę błędu między poziomem pierwszym, a pozostałymi czterema:
# 235, a pozostałe 0.3 do 0.65.
# Chcemy następnie dopasować ten sam model regresji logistycznej wykluczając < HS Grad.
wage.refined
bad.indices = Wage[["education"]] == "1. < HS Grad"
Wage.refined = Wage[!c(bad.indices),]
wage.refined
# Zadanie 3, lab5, Paweł Mendroch
library(ISLR)
library(gam)
library(data.table)
Wage = na.omit(Wage)
attach(Wage)
# Przykład z konspektu GAM w GLM
fit.logistic.gam <- gam(I(wage > 250) ~ year + s(age, df = 5) + education, family = binomial, data = Wage)
summary(fit.logistic.gam)
pred.gam = predict(fit.logistic.gam, se.fit = TRUE)
errors = cbind(education, pred.gam$se.fit)
aggregate(errors[,2], list(education), mean)
bad.indices = Wage[["education"]] == "1. < HS Grad"
Wage.refined = Wage[!c(bad.indices),]
wage.refined
bad.indices = Wage[["education"]] == "1. < HS Grad"
Wage[!c(bad.indices),]
wage
Wage[["education"]] == "1. < HS Grad"
# Zadanie 3, lab5, Paweł Mendroch
library(ISLR)
library(gam)
library(data.table)
Wage = na.omit(Wage)
attach(Wage)
# Przykład z konspektu GAM w GLM
fit.logistic.gam <- gam(I(wage > 250) ~ year + s(age, df = 5) + education, family = binomial, data = Wage)
summary(fit.logistic.gam)
pred.gam = predict(fit.logistic.gam, se.fit = TRUE)
errors = cbind(education, pred.gam$se.fit)
aggregate(errors[,2], list(education), mean)
# Widzimy ogromną różnicę błędu między poziomem pierwszym, a pozostałymi czterema:
# 235, a pozostałe 0.3 do 0.65.
# Chcemy następnie dopasować ten sam model regresji logistycznej wykluczając < HS Grad.
WageNew = Wage[!c(Wage[["education"]] == "1. < HS Grad"),]
attach(WageNew)
fit.logistic.gam <- gam(I(wage > 250) ~ year + s(age, df = 5) + education, family = binomial, data = WageNew)
summary(fit.logistic.gamNew)
# Zadanie 3, lab5, Paweł Mendroch
library(ISLR)
library(gam)
library(data.table)
Wage = na.omit(Wage)
attach(Wage)
# Przykład z konspektu GAM w GLM
fit.logistic.gam <- gam(I(wage > 250) ~ year + s(age, df = 5) + education, family = binomial, data = Wage)
summary(fit.logistic.gam)
pred.gam = predict(fit.logistic.gam, se.fit = TRUE)
errors = cbind(education, pred.gam$se.fit)
aggregate(errors[,2], list(education), mean)
# Widzimy ogromną różnicę błędu między poziomem pierwszym, a pozostałymi czterema:
# 235, a pozostałe 0.3 do 0.65.
# Chcemy następnie dopasować ten sam model regresji logistycznej wykluczając < HS Grad.
WageNew = Wage[!c(Wage[["education"]] == "1. < HS Grad"),]
attach(WageNew)
fit.logistic.gam <- gam(I(wage > 250) ~ year + s(age, df = 5) + education, family = binomial, data = WageNew)
summary(fit.logistic.gamNew)
fit.logistic.gamNew <- gam(I(wage > 250) ~ year + s(age, df = 5) + education, family = binomial, data = WageNew)
summary(fit.logistic.gamNew)
# Zadanie 3, lab5, Paweł Mendroch
library(ISLR)
library(gam)
Wage = na.omit(Wage)
attach(Wage)
# Przykład z konspektu GAM w GLM
fit.logistic.gam <- gam(I(wage > 250) ~ year + s(age, df = 5) + education, family = binomial, data = Wage)
summary(fit.logistic.gam)
pred.gam = predict(fit.logistic.gam, se.fit = TRUE)
errors = cbind(education, pred.gam$se.fit)
aggregate(errors[,2], list(education), mean)
# Widzimy ogromną różnicę błędu między poziomem pierwszym, a pozostałymi czterema:
# 235, a pozostałe 0.3 do 0.65.
# Chcemy następnie dopasować ten sam model regresji logistycznej wykluczając < HS Grad.
WageNew = Wage[!c(Wage[["education"]] == "1. < HS Grad"),]
attach(WageNew)
# Dopasowujemy nowy model do tej samej regresji logistycznej, tym razem bez poziomu pierwszego edukacji
fit.logistic.gamNew <- gam(I(wage > 250) ~ year + s(age, df = 5) + education, family = binomial, data = WageNew)
summary(fit.logistic.gamNew)
